import java.io.*;  
import java.util.*;  
public class BFSAlgo  {  
    
    
    private LinkedList<Integer> adj[];  // declare the  adjacency list 
 
    private int N;  //total number number of nodes in the graph 
    
    
   // CONSTRUCTOR of BFSAlgo class
    BFSAlgo(int v)  
    {  
        // private int N;  // total number number of nodes in the graph 
        N = v;  
        adj = new LinkedList[N];  
        for (int i=0; i<v; i++)  
        {  
            adj[i] = new LinkedList<>();  
        }  
      
    } 
    
     // Function to add an edge into the graph
    void addEdge(int v,int w)  
    {  
        adj[v].add(w); //adding aedge to the adjacency list 
    }  
    
    // printing  BFS traversal from a given source n
    void BFS(int n)  
    {  
        boolean visited[] = new boolean[N];
        LinkedList<Integer> que = new LinkedList<Integer>();
        
        int b = 0;  
        
        visited[n]=true;                    
        que.add(n);       
        while (que.size() != 0)  
        {  
            n = que.poll(); 
            System.out.print(n +" ");    
           
           
            for (int i = 0; i < adj[n].size(); i++) 
            {  
                b = adj[n].get(i);  
                if (!visited[b])       
                {  
                    visited[b] = true;  
                    que.add(b);  
                }  
            }    
        }  
    }    
    public static void main(String args[])  
    {  
        BFSAlgo G1= new BFSAlgo(7);  
        G1.addEdge(0, 1);
        G1.addEdge(0, 2);
        G1.addEdge(1, 3);
        G1.addEdge(2, 4);
        G1.addEdge(4, 5);
        G1.addEdge(5, 6);
        System.out.println(" Breadth First Traversal is :");  
        G1.BFS(0);  
    }  
}
